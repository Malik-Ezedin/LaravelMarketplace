<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2022-08-12 09:44:11              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
* Copyright (C) Incevio Systems, Inc - All Rights Reserved
* Unauthorized copying of this file, via any medium is strictly prohibited
* Proprietary and confidential
* Written by Munna Khan <help.zcart@gmail.com>, September 2018
*/
 namespace App\Http\Controllers\Admin; use App\Models\Package; use App\Http\Controllers\Controller; use App\Http\Requests\Validations\PackageInstallationRequest; use App\Services\PackageInstaller; use Illuminate\Http\Request; use Illuminate\Support\Facades\Artisan; use Illuminate\Support\Facades\Log; use Illuminate\Support\Facades\DB; class PackagesController extends Controller { public function index() { $installables = $this->scanPackages(); $installs = Package::all(); return view("\141\144\x6d\151\156\56\160\141\x63\153\x61\x67\x65\x73\x2e\x69\x6e\x64\145\170", compact("\x69\x6e\163\164\x61\x6c\154\141\x62\154\145\163", "\151\x6e\x73\x74\141\154\154\163")); } public function upload() { return view("\x61\x64\x6d\151\156\x2e\x70\141\x63\153\141\147\145\163\x2e\x5f\x75\160\154\x6f\x61\x64"); } public function save(Request $request) { echo "\74\160\162\145\x3e"; print_r($request->all()); echo "\x3c\x70\162\x65\76"; exit("\145\156\144\x21"); } public function initiate(Request $request, $package) { if (!(config("\x61\160\x70\56\x64\145\155\x6f") == true && config("\141\160\160\56\x64\145\x62\165\147") !== true)) { goto Xmnuv; } return back()->with("\167\x61\x72\156\x69\156\x67", trans("\155\x65\163\x73\x61\147\x65\x73\x2e\144\x65\155\157\137\x72\x65\x73\164\x72\151\143\x74\x69\x6f\156")); Xmnuv: $installable = $this->scanPackages($package); if (!$installable) { goto R72Bp; } if (!Package::where("\x73\x6c\165\147", $installable["\x73\x6c\x75\147"])->first()) { goto uWZ_d; } return back()->with("\x65\162\162\x6f\x72", trans("\x6d\145\163\163\x61\x67\145\x73\x2e\x70\x61\x63\x6b\x61\x67\145\x5f\151\156\x73\164\x61\154\x6c\145\x64\137\141\154\162\x65\141\x64\171", ["\160\x61\143\x6b\x61\147\x65" => $package])); uWZ_d: R72Bp: return view("\x61\x64\155\151\x6e\x2e\160\141\x63\x6b\x61\147\145\163\56\137\151\x6e\x69\164\x69\141\164\x65", compact("\151\156\x73\x74\141\154\154\x61\142\154\x65")); } public function install(PackageInstallationRequest $request, $package) { if (!(config("\141\x70\x70\x2e\144\145\x6d\157") == true && config("\141\160\x70\56\x64\x65\x62\x75\147") !== true)) { goto lCTBJ; } return back()->with("\x77\141\162\x6e\151\156\x67", trans("\x6d\145\163\163\141\x67\145\x73\x2e\x64\x65\x6d\x6f\x5f\x72\145\x73\164\x72\x69\143\164\x69\x6f\156")); lCTBJ: $installable = $this->scanPackages($package); if (!$installable) { goto T7oU7; } try { $installer = new PackageInstaller($request, $installable); $installer->install(); } catch (\Exception $e) { Log::error($e); $installer->uninstall(); $registered = Package::where("\x73\x6c\x75\x67", $package)->first(); if (!$registered) { goto aKNT2; } $registered->delete(); aKNT2: return back()->with("\145\x72\162\157\x72", $e->getMessage()); } Artisan::call("\x63\141\x63\150\x65\x3a\143\154\145\x61\162"); Artisan::call("\162\157\x75\164\x65\72\x63\154\x65\141\162"); return back()->with("\x73\x75\143\x63\x65\x73\163", trans("\155\145\x73\163\x61\x67\145\163\x2e\x70\141\143\153\x61\x67\145\x5f\151\156\x73\x74\x61\x6c\154\x65\144\137\x73\x75\143\x63\x65\163\x73", ["\x70\x61\143\153\x61\x67\x65" => $package])); T7oU7: return back()->with("\x65\162\162\x6f\x72", trans("\155\x65\x73\x73\141\147\x65\163\56\x66\x61\x69\x6c\x65\x64")); } public function uninstall(Request $request, $package) { if (!(config("\x61\160\160\56\x64\145\155\x6f") == true && config("\141\x70\x70\x2e\144\x65\142\x75\x67") !== true)) { goto H9aOY; } return back()->with("\167\141\x72\x6e\x69\x6e\147", trans("\x6d\145\163\x73\x61\147\x65\163\x2e\144\145\155\x6f\x5f\x72\145\163\x74\162\x69\x63\164\151\157\x6e")); H9aOY: $registered = Package::where("\x73\154\165\x67", $package)->firstOrFail(); $uninstallable = $this->scanPackages($package); DB::beginTransaction(); try { $installer = new PackageInstaller($request, $uninstallable); if (!$installer->uninstall()) { goto oERBj; } Artisan::call("\x63\x61\143\x68\x65\x3a\143\x6c\x65\141\x72"); Artisan::call("\162\x6f\x75\x74\145\x3a\x63\154\x65\x61\162"); if (!$registered->delete()) { goto lM4Re; } $msg = trans("\x6d\x65\163\x73\x61\147\x65\x73\56\x70\141\143\153\141\147\x65\x5f\165\x6e\x69\156\x73\x74\x61\154\154\x65\x64\x5f\x73\x75\x63\143\145\163\x73", ["\160\x61\x63\153\141\147\x65" => $package]); DB::commit(); return back()->with("\x73\x75\143\x63\145\x73\x73", $msg); lM4Re: oERBj: } catch (\Exception $e) { DB::rollback(); Log::error($e); return back()->with("\145\162\x72\x6f\162", $e->getMessage()); } return back()->with("\145\x72\x72\x6f\x72", trans("\155\x65\x73\x73\141\x67\145\x73\x2e\x66\141\151\154\145\144")); } public function activation(Request $request, $package) { if (!(config("\141\160\160\x2e\144\x65\x6d\x6f") == true && config("\141\x70\160\56\144\145\x62\165\x67") !== true)) { goto SjRoj; } return response("\145\x72\x72\157\x72", 444); SjRoj: if (!($registered = Package::where("\163\x6c\165\147", $package)->first())) { goto qshnt; } $registered->active = !$registered->active; $registered->save(); Artisan::call("\x63\x61\143\150\145\72\x63\x6c\145\141\x72"); return response("\163\x75\x63\143\145\163\163", 200); qshnt: $unregistered = $this->scanPackages($package); Log::info($unregistered); if (!$unregistered) { goto F2Y_9; } $registered = Package::create($unregistered); F2Y_9: return response("\163\165\x63\x63\145\163\x73", 200); } public function updateConfig(Request $request) { if (!updateOptionTable($request)) { goto GjM3b; } Artisan::call("\143\x61\143\x68\x65\72\143\154\x65\x61\x72"); return back()->with("\163\165\x63\x63\145\x73\163", trans("\x6d\145\x73\163\141\x67\145\163\x2e\160\141\x63\x6b\141\x67\145\x5f\163\x65\x74\x74\151\156\147\x73\x5f\165\160\x64\x61\x74\145\144")); GjM3b: return back()->with("\x65\162\x72\157\162", trans("\x6d\145\163\x73\x61\x67\x65\x73\56\x66\141\151\154\x65\x64")); } public function toggleConfig(Request $request, $option) { if (!(config("\x61\160\x70\56\144\145\155\157") == true && config("\141\160\x70\x2e\x64\x65\142\x75\x67") !== true)) { goto Vn2YZ; } return response("\145\x72\x72\x6f\162", 444); Vn2YZ: if (!DB::table("\157\x70\164\151\x6f\x6e\163")->where("\157\x70\x74\x69\x6f\156\x5f\156\x61\155\145", $option)->update(["\157\160\x74\151\x6f\x6e\137\x76\141\x6c\165\145" => DB::raw("\116\x4f\x54\40\x6f\160\164\151\157\156\x5f\x76\141\x6c\x75\x65")])) { goto IsxOD; } Artisan::call("\143\141\143\150\x65\72\x63\154\x65\141\x72"); return response("\x73\x75\143\x63\x65\163\x73", 200); IsxOD: return response("\x65\162\x72\157\x72", 405); } private function scanPackages($slug = null) { $packages = []; foreach (glob(base_path("\160\x61\143\153\x61\147\x65\x73\57\x2a"), GLOB_ONLYDIR) as $dir) { if (!file_exists($manifest = $dir . "\57\155\x61\156\x69\x66\x65\163\164\x2e\x6a\163\x6f\x6e")) { goto bnkX3; } $json = file_get_contents($manifest); if (!($json !== '')) { goto STstg; } $data = json_decode($json, true); if (!($data === null)) { goto qVGrQ; } throw new \Exception("\x49\x6e\x76\x61\154\151\144\40\x6d\141\x6e\x69\x66\x65\163\164\56\152\163\x6f\x6e\40\146\x69\154\x65\40\141\164\40\x5b{$dir}\x5d"); qVGrQ: $data["\x70\x61\x74\150"] = $dir; if (!($slug && $data["\x73\154\x75\147"] == $slug)) { goto Gu73r; } return $data; Gu73r: $packages[] = $data; STstg: bnkX3: Pfy_6: } Fjcvz: return $packages; } }