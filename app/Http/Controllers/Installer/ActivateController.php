<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2022-08-12 09:43:46              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
* Copyright (C) Incevio Systems, Inc - All Rights Reserved
* Unauthorized copying of this file, via any medium is strictly prohibited
* Proprietary and confidential
* Written by Munna Khan <help.zcart@gmail.com>, September 2018
*/
 namespace App\Http\Controllers\Installer; use Exception; use Illuminate\Http\Request; use Illuminate\Routing\Controller; use Illuminate\Support\Facades\DB; class ActivateController extends Controller { public function activate() { if ($this->checkDatabaseConnection()) { goto Q8KVZ; } return redirect()->back()->withErrors(["\x64\141\164\141\x62\141\x73\x65\137\143\x6f\x6e\156\145\143\164\x69\x6f\x6e" => trans("\151\156\163\x74\141\x6c\x6c\145\x72\x5f\155\x65\163\x73\x61\x67\145\163\56\145\x6e\166\151\162\x6f\156\x6d\x65\x6e\x74\56\167\x69\x7a\x61\162\144\56\x66\157\x72\155\56\x64\x62\137\143\157\156\x6e\145\x63\164\151\x6f\156\x5f\x66\141\x69\x6c\x65\144")]); Q8KVZ: return view("\x69\156\x73\x74\x61\x6c\x6c\x65\162\x2e\x61\x63\x74\151\x76\x61\164\x65"); } public function verify(Request $request) { $mysqli_connection = getMysqliConnection(); if ($mysqli_connection) { goto qJ23U; } return redirect()->route("\111\x6e\x73\x74\141\x6c\154\145\162\56\141\143\164\151\166\x61\x74\x65")->with(["\x66\141\x69\x6c\145\144" => trans("\162\145\x73\160\x6f\x6e\163\x65\x73\56\x64\x61\x74\141\142\x61\163\145\x5f\143\x6f\156\x6e\145\143\x74\151\157\156\x5f\x66\141\x69\x6c\x65\144")])->withInput($request->all()); qJ23U: $purchase_verification = aplVerifyEnvatoPurchase($request->purchase_code); if (empty($purchase_verification)) { goto rEfxj; } return redirect()->route("\111\x6e\163\164\141\154\154\145\162\56\x61\x63\x74\151\166\141\x74\145")->with(["\x66\141\x69\154\x65\x64" => "\x43\157\156\156\145\x63\x74\x69\157\x6e" . "\40\x74\157\x20\x72\x65\155\x6f\x74\145\40" . "\x73\145\162\x76\x65\x72\40\143\x61\156\x27\164\40\142\145" . "\40\x65\163\x74\x61\142\154\151\163\x68\x65\x64"])->withInput($request->all()); rEfxj: $license_notifications_array = incevioVerify($request->root_url, $request->email_address, $request->purchase_code, $mysqli_connection); if (!($license_notifications_array["\156\157\164\x69\x66\x69\143\141\164\x69\x6f\x6e\x5f\x63\141\163\x65"] == "\156\x6f\x74\151\x66\x69\x63\141\x74\x69\x6f\x6e\137\154\x69\143\145\156\163\x65\137\157\153")) { goto PndqK; } return view("\151\156\x73\164\141\x6c\154\x65\162\56\x69\x6e\163\164\141\x6c\154", compact("\x6c\151\143\x65\156\x73\x65\137\156\x6f\164\x69\x66\151\x63\141\x74\x69\157\x6e\163\x5f\141\162\x72\141\x79")); PndqK: if (!($license_notifications_array["\156\157\164\151\x66\x69\143\141\x74\x69\x6f\x6e\137\143\x61\163\145"] == "\x6e\157\x74\151\x66\151\143\x61\x74\151\x6f\x6e\x5f\x61\x6c\162\x65\141\144\171\137\x69\156\163\164\x61\154\154\x65\x64")) { goto Vk3iA; } $license_notifications_array = incevioAutoloadHelpers($mysqli_connection, 1); if (!($license_notifications_array["\156\157\x74\x69\x66\x69\x63\141\x74\x69\157\x6e\137\x63\141\163\x65"] == "\x6e\x6f\164\151\x66\x69\x63\141\x74\x69\157\156\137\154\151\x63\x65\156\163\145\137\x6f\x6b")) { goto mvg7C; } return view("\x69\156\x73\x74\141\x6c\x6c\145\x72\x2e\x69\156\x73\x74\141\x6c\x6c", compact("\154\151\143\145\156\163\145\x5f\156\157\164\151\x66\x69\x63\x61\164\151\x6f\x6e\x73\x5f\141\x72\x72\141\171")); mvg7C: Vk3iA: return redirect()->route("\x49\x6e\x73\164\x61\x6c\x6c\x65\162\x2e\x61\x63\164\x69\x76\x61\x74\x65")->with(["\x66\141\x69\x6c\x65\144" => $license_notifications_array["\156\x6f\164\x69\146\x69\x63\141\x74\x69\x6f\156\x5f\164\145\170\x74"]])->withInput($request->all()); } private function checkDatabaseConnection() { try { DB::connection()->getPdo(); return true; } catch (Exception $e) { return false; } } private function response($message, $status = "\144\x61\x6e\x67\x65\x72") { return ["\x73\164\141\x74\x75\163" => $status, "\x6d\x65\163\163\141\x67\145" => $message]; } }
